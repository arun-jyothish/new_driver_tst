cscope 15 /nfs_rfs/home/ubuntu/kernel/driver -q 0000000598 0000026031
	@Makefile

1 
	gKBUILD_EXTRA_SYMBOLS
=
n


2 
CONFIG_MODULE_SIG
=
n


3 
CONFIG_MODVERSIONS
=
n


5 
obj
-
m
 +
my_drivî
.
o


6 #roŸ_dú = /
home
/
¨un
/
Tech√xi⁄
/
ãch
/
löux


7 
roŸ_dú
 = /
home
/
¨un
/
√w
/
löux


10 #makê-
C
 
$
{
roŸ_dú
} 
M
=${
PWD
} 
moduÀs


11 
föÆ
:

12 
make
 
ARCH
=
¨m
 
CROSS_COMPILE
=/
home
/
¨un
/
√w
/
gcc
-
lö¨o
-7.5.0-2019.12-
x86_64_¨m
-
löux
-
gnuóbihf
/
bö
/¨m-löux-gnuóbihf- -
C
 
$
{
roŸ_dú
} 
M
=${
PWD
} 
moduÀs


13 
˛ón
:

14 
make
 -
C
 
$
{
roŸ_dú
} 
M
=${
PWD
} 
˛ón


	@driver.c

1 
	~<löux/kî√l.h
>

2 
	~<löux/moduÀ.h
>

3 
	~<löux/devi˚.h
>

4 
	~<löux/öô.h
>

5 
	~<löux/fs.h
>

6 
	~<löux/io.h
>

10 
	#gpio_b_gdú
 (
gpio_b_ba£_addr
+0x04)

	)

11 
	#Àd_blue_pö
 (26)

	)

12 
	#gpio_b_ba£_addr
 (0x20A4000)

	)

13 
	#‚P
(
sht
Ë(* shtË–*
dev
 )

	)

18 
__iomem
* 
	ggpio_b_gdú_vm
;

19 
__iomem
* 
	ggpio_b_dr_vm
 ;

20 
devi˚
 * 
	gmy_devi˚
 ;

21 
˛ass
 * 
	gmy_˛ass
 ;

22 
	gmaj‹
 ;

27 
ssize_t
 
ªad_‚
 (
fûe
 *, *, 
size_t
, 
loff_t
 *);

28 
ssize_t
 
wrôe_‚
 (
fûe
 *, c⁄° *, 
size_t
, 
loff_t
 *);

29 
›í_‚
 (
öode
 *, 
fûe
 *);

33 
fûe_›î©i⁄s
 
	gf›s
 = {

34 
ow√r
: 
THIS_MODULE
,

35 
ªad
 : 
ªad_‚
,

36 
wrôe
 : 
wrôe_‚
,

37 
›í
 : 
›í_‚
,

41 
	#DEVICE_NAME
 "my_drivî"

	)

42 
	#DEVICE_CLASS
 "my_drivî_˛ass"

	)

45 
MODULE_LICENSE
("GPL");

46 
MODULE_AUTHOR
("ARUN JYOTHISH K");

47 
MODULE_DESCRIPTION
(" device description my device driver .. ");

48 
MODULE_VERSION
("1.0");

52 
	$my_drivî_öô
(){

54 
	`¥ötk
(
KERN_INFO
 "Module intit fn");

55 
maj‹
 = 
	`ªgi°î_chrdev
–0,
DEVICE_NAME
 , &
f›s
);

56 i‡(
maj‹
 < 0 ){

57 
	`¥ötk
(
KERN_INFO
 "DriverÑegister failed\n");

58  
maj‹
;

60 
	`¥ötk
(
KERN_INFO
 "My_drivî Maj‹ NO: %d",
maj‹
);

92 
	}
}

100 
	$my_drivî_exô
(){

109 
	`devi˚_de°roy
(
my_˛ass
, 
	`MKDEV
(
maj‹
,0));

110 
	`¥ötk
(
KERN_INFO
 "ModuleÉxit fn");

111 
	}
}

113 
moduÀ_öô
(
my_drivî_öô
);

114 
moduÀ_exô
(
my_drivî_exô
);

116 
ssize_t
 
	$ªad_‚
 (
fûe
 *
Ê
, * 
ch
, 
size_t
 
e
, 
loff_t
 *
Ÿh
){

117 
	`iowrôe32
–0b0 << 
Àd_blue_pö
, 
gpio_b_dr_vm
);

119 
	}
}

120 
ssize_t
 
	$wrôe_‚
 (
fûe
 *
Ê
, c⁄° *
ch
, 
size_t
 
e
, 
loff_t
 *
Ÿh
){

121 
	`iowrôe32
–0b1 << 
Àd_blue_pö
, 
gpio_b_dr_vm
);

123 
	}
}

125 
	$›í_‚
 (
öode
 *
lk
, 
fûe
 *
kl
){

126 
	`iowrôe32
–0b0 << 
Àd_blue_pö
, 
gpio_b_dr_vm
);

128 
	}
}

	@my_driver.c

1 
	~<löux/kî√l.h
>

2 
	~<löux/moduÀ.h
>

3 
	~<löux/devi˚.h
>

4 
	~<löux/öô.h
>

5 
	~<löux/fs.h
>

6 
	~<löux/io.h
>

10 
	#gpio_b_ba£_addr
 (0x20A4000)

	)

11 
	#gpio_b_dr
 
gpio_b_ba£_addr


	)

12 
	#gpio_b_gdú
 (
gpio_b_ba£_addr
+0x04)

	)

13 
	#Àd_blue_pö
 (26)

	)

18 
__iomem
* 
	ggpio_b_gdú_vm
;

19 
__iomem
* 
	ggpio_b_dr_vm
 ;

20 
devi˚
 * 
	gmy_devi˚
 ;

21 
˛ass
 * 
	gmy_˛ass
 ;

22 
	gmaj‹
 ;

27 
£tup
 ();

28 
ssize_t
 
ªad_‚
 (
fûe
 *, *, 
size_t
, 
loff_t
 *);

29 
ssize_t
 
wrôe_‚
 (
fûe
 *, c⁄° *, 
size_t
, 
loff_t
 *);

30 
›í_‚
 (
öode
 *, 
fûe
 *);

31 
ªÀa£_‚
 (
öode
 *, 
fûe
 *);

35 
fûe_›î©i⁄s
 
	gf›s
 = {

36 
ow√r
: 
THIS_MODULE
,

37 
ªad
 : 
ªad_‚
,

38 
wrôe
 : 
wrôe_‚
,

39 
›í
 : 
›í_‚
,

40 
ªÀa£
 : 
ªÀa£_‚


44 
	#DEVICE_NAME
 "my_drivî"

	)

45 
	#DEVICE_CLASS
 "my_drivî_˛ass"

	)

48 
MODULE_LICENSE
("GPL");

49 
MODULE_AUTHOR
("ARUN JYOTHISH K");

50 
MODULE_DESCRIPTION
(" device description my device driver .. ");

51 
MODULE_VERSION
("1.0");

55 
	$my_drivî_öô
(){

57 
	`¥ötk
(
KERN_INFO
 "Module intit fn");

58 
maj‹
 = 
	`ªgi°î_chrdev
–0,
DEVICE_NAME
 , &
f›s
);

59 i‡(
maj‹
 < 0 ){

60 
	`¥ötk
(
KERN_INFO
 "DriverÑegister failed\n");

61  
maj‹
;

63 
	`¥ötk
(
KERN_INFO
 "My_drivî Maj‹ NO: %d",
maj‹
);

65 
my_˛ass
 = 
	`˛ass_¸óã
–
THIS_MODULE
, 
DEVICE_CLASS
 );

66 i‡–
	`IS_ERR
–
my_˛ass
 ) ){

67 
	`uƒegi°î_chrdev
 ( 
maj‹
 , 
DEVICE_NAME
 );

68 
	`¥ötk
(
KERN_ALERT
 "My_driver CLASS CREATE FAILED");

69  
	`PTR_ERR
(
my_˛ass
);

71 
	`¥ötk
(
KERN_INFO
 "My_driver class created ");

74 
my_devi˚
 = 
	`devi˚_¸óã
–
my_˛ass
, 
NULL
 ,
	`MKDEV
(
maj‹
,0), NULL, 
DEVICE_NAME
 );

75 i‡–
	`IS_ERR
–
my_devi˚
 ) ){

76 
	`˛ass_de°roy
–
my_˛ass
 );

77 
	`uƒegi°î_chrdev
 ( 
maj‹
 , 
DEVICE_NAME
 );

78 
	`¥ötk
(
KERN_ALERT
 "My_driver DEVICE CREATE FAILED");

79  
	`PTR_ERR
(
my_devi˚
);

81 
	`¥ötk
(
KERN_INFO
 "deviceÇode created ... !");

91 
gpio_b_gdú_vm
 = 
	`i‹em≠
(
gpio_b_gdú
, (
u32
));

92 
gpio_b_dr_vm
 = 
	`i‹em≠
(
gpio_b_dr
, (
u32
));

93 
	`£tup
 ();

94 
	`iowrôe32
–0b0 << 
Àd_blue_pö
, 
gpio_b_dr_vm
);

101 
	}
}

109 
	$my_drivî_exô
(){

110 
	`iounm≠
(
gpio_b_dr_vm
);

111 
	`iounm≠
(
gpio_b_gdú_vm
);

112 
	`¥ötk
(
KERN_INFO
 "ModuleÉxit fn called\n");

113 
	`˛ass_uƒegi°î
(
my_˛ass
);

114 
	`˛ass_de°roy
(
my_˛ass
);

115 
	`uƒegi°î_chrdev
(
maj‹
, 
DEVICE_NAME
);

116 
	`devi˚_de°roy
(
my_˛ass
, 
	`MKDEV
(
maj‹
,0));

117 
	`iowrôe32
–0b1 << 
Àd_blue_pö
, 
gpio_b_dr_vm
);

118 
	`¥ötk
(
KERN_INFO
 "ModuleÉxit fn");

119 
	}
}

121 
moduÀ_öô
(
my_drivî_öô
);

122 
moduÀ_exô
(
my_drivî_exô
);

124 
ssize_t
 
	$ªad_‚
 (
fûe
 *
Ê
, * 
ch
, 
size_t
 
e
, 
loff_t
 *
Ÿh
){

125 
	`¥ötk
(
KERN_INFO
 "read_fn called !");

126 
	`iowrôe32
–0b0 << 
Àd_blue_pö
, 
gpio_b_dr_vm
);

128 
	}
}

129 
ssize_t
 
	$wrôe_‚
 (
fûe
 *
Ê
, c⁄° *
ch
, 
size_t
 
e
, 
loff_t
 *
Ÿh
){

130 
	`¥ötk
(
KERN_INFO
 "write_fn called !");

131 
	`iowrôe32
–0b1 << 
Àd_blue_pö
, 
gpio_b_dr_vm
);

133 
	}
}

135 
	$›í_‚
 (
öode
 *
lk
, 
fûe
 *
kl
){

143 
	`¥ötk
(
KERN_INFO
 "open_fn called !");

145 
	}
}

147 
	$ªÀa£_‚
(
öode
 *
lk
, 
fûe
 *
kl
){

153 
	`¥ötk
(
KERN_INFO
 "close_fn called !");

155 
	}
}

157 
	$£tup
 (){

159 
	#mask_pö
 0b1 << 
Àd_blue_pö


	)

163 
u32
 
ªad
 = 
	`i‹ód32
(
gpio_b_gdú_vm
);

165 
	`¥ötk
(
KERN_INFO
 "ªg vÆ: %x",
ªad
);

167 
	`iowrôe32
–
mask_pö
 , 
gpio_b_gdú_vm
);

168 
ªad
 = 
	`i‹ód32
(
gpio_b_gdú_vm
);

169 
	`¥ötk
(
KERN_INFO
 "ªg vÆ: %x",
ªad
);

170 
	}
}

	@my_driver.mod.c

1 
	~<löux/moduÀ.h
>

2 
	~<löux/vîmagic.h
>

3 
	~<löux/compûî.h
>

5 
MODULE_INFO
(
vîmagic
, 
VERMAGIC_STRING
);

7 
__visibÀ
 
moduÀ
 
__this_moduÀ


8 
__©åibuã__
((
£˘i⁄
(".gnu.linkonce.this_module"))) = {

9 .
«me
 = 
KBUILD_MODNAME
,

10 .
	göô
 = 
öô_moduÀ
,

11 #ifde‡
CONFIG_MODULE_UNLOAD


12 .
	gexô
 = 
˛ónup_moduÀ
,

14 .
	g¨ch
 = 
MODULE_ARCH_INIT
,

17 c⁄° 
modvîsi⁄_öfo
 
	g____vîsi⁄s
[]

18 
__u£d


19 
__©åibuã__
((
£˘i⁄
("__versions"))) = {

20 { 0xÁ985410, 
__VMLINUX_SYMBOL_STR
(
moduÀ_œyout
) },

21 { 0x584166cc, 
__VMLINUX_SYMBOL_STR
(
devi˚_de°roy
) },

22 { 0x265adf97, 
__VMLINUX_SYMBOL_STR
(
˛ass_uƒegi°î
) },

23 { 0xc2165d85, 
__VMLINUX_SYMBOL_STR
(
__¨m_iounm≠
) },

24 { 0x495be299, 
__VMLINUX_SYMBOL_STR
(
˛ass_de°roy
) },

25 { 0x6bc3fbc0, 
__VMLINUX_SYMBOL_STR
(
__uƒegi°î_chrdev
) },

26 { 0xfb961d14, 
__VMLINUX_SYMBOL_STR
(
__¨m_i‹em≠
) },

27 { 0xÁˇ„b, 
__VMLINUX_SYMBOL_STR
(
devi˚_¸óã
) },

28 { 0x3c8c7d13, 
__VMLINUX_SYMBOL_STR
(
__˛ass_¸óã
) },

29 { 0x34fbc3de, 
__VMLINUX_SYMBOL_STR
(
__ªgi°î_chrdev
) },

30 { 0x5dcf6341, 
__VMLINUX_SYMBOL_STR
(
ouãr_ˇche
) },

31 { 0xefd6cf06, 
__VMLINUX_SYMBOL_STR
(
__´abi_unwöd_˝p_¥0
) },

32 { 0x27e1a049, 
__VMLINUX_SYMBOL_STR
(
¥ötk
) },

35 c⁄° 
	g__moduÀ_dïíds
[]

36 
__u£d


37 
__©åibuã__
((
£˘i⁄
(".modinfo"))) =

41 
MODULE_INFO
(
§cvîsi⁄
, "01DF7144E761AA734321790");

	@/usr/include/linux/fs.h

2 #i‚de‡
_LINUX_FS_H


3 
	#_LINUX_FS_H


	)

13 
	~<löux/limôs.h
>

14 
	~<löux/io˘l.h
>

15 
	~<löux/ty≥s.h
>

16 
	~<löux/fs¸y±.h
>

19 
	~<löux/mou¡.h
>

32 #unde‡
NR_OPEN


33 
	#INR_OPEN_CUR
 1024

	)

34 
	#INR_OPEN_MAX
 4096

	)

36 
	#BLOCK_SIZE_BITS
 10

	)

37 
	#BLOCK_SIZE
 (1<<
BLOCK_SIZE_BITS
)

	)

39 
	#SEEK_SET
 0

	)

40 
	#SEEK_CUR
 1

	)

41 
	#SEEK_END
 2

	)

42 
	#SEEK_DATA
 3

	)

43 
	#SEEK_HOLE
 4

	)

44 
	#SEEK_MAX
 
SEEK_HOLE


	)

46 
	#RENAME_NOREPLACE
 (1 << 0Ë

	)

47 
	#RENAME_EXCHANGE
 (1 << 1Ë

	)

48 
	#RENAME_WHITEOUT
 (1 << 2Ë

	)

50 
	sfûe_˛⁄e_ønge
 {

51 
__s64
 
	m§c_fd
;

52 
__u64
 
	m§c_off£t
;

53 
__u64
 
	m§c_Àngth
;

54 
__u64
 
	mde°_off£t
;

57 
	sf°rim_ønge
 {

58 
__u64
 
	m°¨t
;

59 
__u64
 
	mÀn
;

60 
__u64
 
	mmöÀn
;

64 
	#FILE_DEDUPE_RANGE_SAME
 0

	)

65 
	#FILE_DEDUPE_RANGE_DIFFERS
 1

	)

68 
	sfûe_dedu≥_ønge_öfo
 {

69 
__s64
 
	mde°_fd
;

70 
__u64
 
	mde°_off£t
;

71 
__u64
 
	mbyãs_dedu≥d
;

78 
__s32
 
	m°©us
;

79 
__u32
 
	mª£rved
;

83 
	sfûe_dedu≥_ønge
 {

84 
__u64
 
	m§c_off£t
;

85 
__u64
 
	m§c_Àngth
;

86 
__u16
 
	mde°_cou¡
;

87 
__u16
 
	mª£rved1
;

88 
__u32
 
	mª£rved2
;

89 
fûe_dedu≥_ønge_öfo
 
	möfo
[0];

93 
	sfûes_°©_°ru˘
 {

94 
	mƒ_fûes
;

95 
	mƒ_‰ì_fûes
;

96 
	mmax_fûes
;

99 
	söodes_°©_t
 {

100 
	mƒ_öodes
;

101 
	mƒ_unu£d
;

102 
	mdummy
[5];

106 
	#NR_FILE
 8192

	)

111 
	sfsx©å
 {

112 
__u32
 
	mfsx_xÊags
;

113 
__u32
 
	mfsx_extsize
;

114 
__u32
 
	mfsx_√xã¡s
;

115 
__u32
 
	mfsx_¥ojid
;

116 
__u32
 
	mfsx_cowextsize
;

117 
	mfsx_∑d
[8];

123 
	#FS_XFLAG_REALTIME
 0x00000001

	)

124 
	#FS_XFLAG_PREALLOC
 0x00000002

	)

125 
	#FS_XFLAG_IMMUTABLE
 0x00000008

	)

126 
	#FS_XFLAG_APPEND
 0x00000010

	)

127 
	#FS_XFLAG_SYNC
 0x00000020

	)

128 
	#FS_XFLAG_NOATIME
 0x00000040

	)

129 
	#FS_XFLAG_NODUMP
 0x00000080

	)

130 
	#FS_XFLAG_RTINHERIT
 0x00000100

	)

131 
	#FS_XFLAG_PROJINHERIT
 0x00000200

	)

132 
	#FS_XFLAG_NOSYMLINKS
 0x00000400

	)

133 
	#FS_XFLAG_EXTSIZE
 0x00000800

	)

134 
	#FS_XFLAG_EXTSZINHERIT
 0x00001000

	)

135 
	#FS_XFLAG_NODEFRAG
 0x00002000

	)

136 
	#FS_XFLAG_FILESTREAM
 0x00004000

	)

137 
	#FS_XFLAG_DAX
 0x00008000

	)

138 
	#FS_XFLAG_COWEXTSIZE
 0x00010000

	)

139 
	#FS_XFLAG_HASATTR
 0x80000000

	)

144 
	#BLKROSET
 
	`_IO
(0x12,93Ë

	)

145 
	#BLKROGET
 
	`_IO
(0x12,94Ë

	)

146 
	#BLKRRPART
 
	`_IO
(0x12,95Ë

	)

147 
	#BLKGETSIZE
 
	`_IO
(0x12,96Ë

	)

148 
	#BLKFLSBUF
 
	`_IO
(0x12,97Ë

	)

149 
	#BLKRASET
 
	`_IO
(0x12,98Ë

	)

150 
	#BLKRAGET
 
	`_IO
(0x12,99Ë

	)

151 
	#BLKFRASET
 
	`_IO
(0x12,100)

	)

152 
	#BLKFRAGET
 
	`_IO
(0x12,101)

	)

153 
	#BLKSECTSET
 
	`_IO
(0x12,102)

	)

154 
	#BLKSECTGET
 
	`_IO
(0x12,103)

	)

155 
	#BLKSSZGET
 
	`_IO
(0x12,104)

	)

157 
	#BLKPG
 
	`_IO
(0x12,105)

	)

161 
	#BLKELVGET
 
	`_IOR
(0x12,106,
size_t
)

	)

162 
	#BLKELVSET
 
	`_IOW
(0x12,107,
size_t
)

	)

167 
	#BLKBSZGET
 
	`_IOR
(0x12,112,
size_t
)

	)

168 
	#BLKBSZSET
 
	`_IOW
(0x12,113,
size_t
)

	)

169 
	#BLKGETSIZE64
 
	`_IOR
(0x12,114,
size_t
Ë

	)

170 
	#BLKTRACESETUP
 
	`_IOWR
(0x12,115,
blk_u£r_åa˚_£tup
)

	)

171 
	#BLKTRACESTART
 
	`_IO
(0x12,116)

	)

172 
	#BLKTRACESTOP
 
	`_IO
(0x12,117)

	)

173 
	#BLKTRACETEARDOWN
 
	`_IO
(0x12,118)

	)

174 
	#BLKDISCARD
 
	`_IO
(0x12,119)

	)

175 
	#BLKIOMIN
 
	`_IO
(0x12,120)

	)

176 
	#BLKIOOPT
 
	`_IO
(0x12,121)

	)

177 
	#BLKALIGNOFF
 
	`_IO
(0x12,122)

	)

178 
	#BLKPBSZGET
 
	`_IO
(0x12,123)

	)

179 
	#BLKDISCARDZEROES
 
	`_IO
(0x12,124)

	)

180 
	#BLKSECDISCARD
 
	`_IO
(0x12,125)

	)

181 
	#BLKROTATIONAL
 
	`_IO
(0x12,126)

	)

182 
	#BLKZEROOUT
 
	`_IO
(0x12,127)

	)

183 
	#BLKGETDISKSEQ
 
	`_IOR
(0x12,128,
__u64
)

	)

189 
	#BMAP_IOCTL
 1

	)

190 
	#FIBMAP
 
	`_IO
(0x00,1Ë

	)

191 
	#FIGETBSZ
 
	`_IO
(0x00,2Ë

	)

192 
	#FIFREEZE
 
	`_IOWR
('X', 119, Ë

	)

193 
	#FITHAW
 
	`_IOWR
('X', 120, Ë

	)

194 
	#FITRIM
 
	`_IOWR
('X', 121, 
f°rim_ønge
Ë

	)

195 
	#FICLONE
 
	`_IOW
(0x94, 9, )

	)

196 
	#FICLONERANGE
 
	`_IOW
(0x94, 13, 
fûe_˛⁄e_ønge
)

	)

197 
	#FIDEDUPERANGE
 
	`_IOWR
(0x94, 54, 
fûe_dedu≥_ønge
)

	)

199 
	#FSLABEL_MAX
 256

	)

201 
	#FS_IOC_GETFLAGS
 
	`_IOR
('f', 1, )

	)

202 
	#FS_IOC_SETFLAGS
 
	`_IOW
('f', 2, )

	)

203 
	#FS_IOC_GETVERSION
 
	`_IOR
('v', 1, )

	)

204 
	#FS_IOC_SETVERSION
 
	`_IOW
('v', 2, )

	)

205 
	#FS_IOC_FIEMAP
 
	`_IOWR
('f', 11, 
fõm≠
)

	)

206 
	#FS_IOC32_GETFLAGS
 
	`_IOR
('f', 1, )

	)

207 
	#FS_IOC32_SETFLAGS
 
	`_IOW
('f', 2, )

	)

208 
	#FS_IOC32_GETVERSION
 
	`_IOR
('v', 1, )

	)

209 
	#FS_IOC32_SETVERSION
 
	`_IOW
('v', 2, )

	)

210 
	#FS_IOC_FSGETXATTR
 
	`_IOR
('X', 31, 
fsx©å
)

	)

211 
	#FS_IOC_FSSETXATTR
 
	`_IOW
('X', 32, 
fsx©å
)

	)

212 
	#FS_IOC_GETFSLABEL
 
	`_IOR
(0x94, 49, [
FSLABEL_MAX
])

	)

213 
	#FS_IOC_SETFSLABEL
 
	`_IOW
(0x94, 50, [
FSLABEL_MAX
])

	)

235 
	#FS_SECRM_FL
 0x00000001

	)

236 
	#FS_UNRM_FL
 0x00000002

	)

237 
	#FS_COMPR_FL
 0x00000004

	)

238 
	#FS_SYNC_FL
 0x00000008

	)

239 
	#FS_IMMUTABLE_FL
 0x00000010

	)

240 
	#FS_APPEND_FL
 0x00000020

	)

241 
	#FS_NODUMP_FL
 0x00000040

	)

242 
	#FS_NOATIME_FL
 0x00000080

	)

244 
	#FS_DIRTY_FL
 0x00000100

	)

245 
	#FS_COMPRBLK_FL
 0x00000200

	)

246 
	#FS_NOCOMP_FL
 0x00000400

	)

248 
	#FS_ENCRYPT_FL
 0x00000800

	)

249 
	#FS_BTREE_FL
 0x00001000

	)

250 
	#FS_INDEX_FL
 0x00001000

	)

251 
	#FS_IMAGIC_FL
 0x00002000

	)

252 
	#FS_JOURNAL_DATA_FL
 0x00004000

	)

253 
	#FS_NOTAIL_FL
 0x00008000

	)

254 
	#FS_DIRSYNC_FL
 0x00010000

	)

255 
	#FS_TOPDIR_FL
 0x00020000

	)

256 
	#FS_HUGE_FILE_FL
 0x00040000

	)

257 
	#FS_EXTENT_FL
 0x00080000

	)

258 
	#FS_VERITY_FL
 0x00100000

	)

259 
	#FS_EA_INODE_FL
 0x00200000

	)

260 
	#FS_EOFBLOCKS_FL
 0x00400000

	)

261 
	#FS_NOCOW_FL
 0x00800000

	)

262 
	#FS_DAX_FL
 0x02000000

	)

263 
	#FS_INLINE_DATA_FL
 0x10000000

	)

264 
	#FS_PROJINHERIT_FL
 0x20000000

	)

265 
	#FS_CASEFOLD_FL
 0x40000000

	)

266 
	#FS_RESERVED_FL
 0x80000000

	)

268 
	#FS_FL_USER_VISIBLE
 0x0003DFFF

	)

269 
	#FS_FL_USER_MODIFIABLE
 0x000380FF

	)

272 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

273 
	#SYNC_FILE_RANGE_WRITE
 2

	)

274 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

275 
	#SYNC_FILE_RANGE_WRITE_AND_WAIT
 (
SYNC_FILE_RANGE_WRITE
 | \

276 
SYNC_FILE_RANGE_WAIT_BEFORE
 | \

277 
SYNC_FILE_RANGE_WAIT_AFTER
)

	)

283 
	t__bôwi£
 
	t__kî√l_rwf_t
;

286 
	#RWF_HIPRI
 ((
__kî√l_rwf_t
)0x00000001)

	)

289 
	#RWF_DSYNC
 ((
__kî√l_rwf_t
)0x00000002)

	)

292 
	#RWF_SYNC
 ((
__kî√l_rwf_t
)0x00000004)

	)

295 
	#RWF_NOWAIT
 ((
__kî√l_rwf_t
)0x00000008)

	)

298 
	#RWF_APPEND
 ((
__kî√l_rwf_t
)0x00000010)

	)

301 
	#RWF_SUPPORTED
 (
RWF_HIPRI
 | 
RWF_DSYNC
 | 
RWF_SYNC
 | 
RWF_NOWAIT
 |\

302 
RWF_APPEND
)

	)

	@/usr/include/linux/kernel.h

2 #i‚de‡
_LINUX_KERNEL_H


3 
	#_LINUX_KERNEL_H


	)

5 
	~<löux/sysöfo.h
>

6 
	~<löux/c⁄°.h
>

	@/usr/include/linux/module.h

2 #i‚de‡
_LINUX_MODULE_H


3 
	#_LINUX_MODULE_H


	)

6 
	#MODULE_INIT_IGNORE_MODVERSIONS
 1

	)

7 
	#MODULE_INIT_IGNORE_VERMAGIC
 2

	)

	@/usr/include/linux/const.h

4 #i‚de‡
_LINUX_CONST_H


5 
	#_LINUX_CONST_H


	)

16 #ifde‡
__ASSEMBLY__


17 
	#_AC
(
X
,
Y
Ë
	)
X

18 
	#_AT
(
T
,
X
Ë
	)
X

20 
	#__AC
(
X
,
Y
Ë(X##Y)

	)

21 
	#_AC
(
X
,
Y
Ë
	`__AC
(X,Y)

	)

22 
	#_AT
(
T
,
X
Ë((T)(X))

	)

25 
	#_UL
(
x
Ë(
	`_AC
(x, 
UL
))

	)

26 
	#_ULL
(
x
Ë(
	`_AC
(x, 
ULL
))

	)

28 
	#_BITUL
(
x
Ë(
	`_UL
(1Ë<< (x))

	)

29 
	#_BITULL
(
x
Ë(
	`_ULL
(1Ë<< (x))

	)

31 
	#__ALIGN_KERNEL
(
x
, 
a
Ë
	`__ALIGN_KERNEL_MASK
(x, (
	`__ty≥of__
(x))◊Ë- 1)

	)

32 
	#__ALIGN_KERNEL_MASK
(
x
, 
mask
Ë(((xË+ (mask)Ë& ~(mask))

	)

34 
	#__KERNEL_DIV_ROUND_UP
(
n
, 
d
Ë((“Ë+ (dË- 1Ë/ (d))

	)

	@/usr/include/linux/fscrypt.h

8 #i‚de‡
_LINUX_FSCRYPT_H


9 
	#_LINUX_FSCRYPT_H


	)

11 
	~<löux/io˘l.h
>

12 
	~<löux/ty≥s.h
>

15 
	#FSCRYPT_POLICY_FLAGS_PAD_4
 0x00

	)

16 
	#FSCRYPT_POLICY_FLAGS_PAD_8
 0x01

	)

17 
	#FSCRYPT_POLICY_FLAGS_PAD_16
 0x02

	)

18 
	#FSCRYPT_POLICY_FLAGS_PAD_32
 0x03

	)

19 
	#FSCRYPT_POLICY_FLAGS_PAD_MASK
 0x03

	)

20 
	#FSCRYPT_POLICY_FLAG_DIRECT_KEY
 0x04

	)

21 
	#FSCRYPT_POLICY_FLAG_IV_INO_LBLK_64
 0x08

	)

22 
	#FSCRYPT_POLICY_FLAG_IV_INO_LBLK_32
 0x10

	)

25 
	#FSCRYPT_MODE_AES_256_XTS
 1

	)

26 
	#FSCRYPT_MODE_AES_256_CTS
 4

	)

27 
	#FSCRYPT_MODE_AES_128_CBC
 5

	)

28 
	#FSCRYPT_MODE_AES_128_CTS
 6

	)

29 
	#FSCRYPT_MODE_ADIANTUM
 9

	)

38 
	#FSCRYPT_POLICY_V1
 0

	)

39 
	#FSCRYPT_KEY_DESCRIPTOR_SIZE
 8

	)

40 
	sfs¸y±_pﬁicy_v1
 {

41 
__u8
 
	mvîsi⁄
;

42 
__u8
 
	mc⁄ã¡s_í¸y±i⁄_mode
;

43 
__u8
 
	mfûíames_í¸y±i⁄_mode
;

44 
__u8
 
	mÊags
;

45 
__u8
 
	mma°î_key_des¸ùt‹
[
FSCRYPT_KEY_DESCRIPTOR_SIZE
];

52 
	#FSCRYPT_KEY_DESC_PREFIX
 "fs¸y±:"

	)

53 
	#FSCRYPT_KEY_DESC_PREFIX_SIZE
 8

	)

54 
	#FSCRYPT_MAX_KEY_SIZE
 64

	)

55 
	sfs¸y±_key
 {

56 
__u32
 
	mmode
;

57 
__u8
 
	møw
[
FSCRYPT_MAX_KEY_SIZE
];

58 
__u32
 
	msize
;

64 
	#FSCRYPT_POLICY_V2
 2

	)

65 
	#FSCRYPT_KEY_IDENTIFIER_SIZE
 16

	)

66 
	sfs¸y±_pﬁicy_v2
 {

67 
__u8
 
	mvîsi⁄
;

68 
__u8
 
	mc⁄ã¡s_í¸y±i⁄_mode
;

69 
__u8
 
	mfûíames_í¸y±i⁄_mode
;

70 
__u8
 
	mÊags
;

71 
__u8
 
	m__ª£rved
[4];

72 
__u8
 
	mma°î_key_idítifõr
[
FSCRYPT_KEY_IDENTIFIER_SIZE
];

76 
	sfs¸y±_gë_pﬁicy_ex_¨g
 {

77 
__u64
 
	mpﬁicy_size
;

79 
__u8
 
	mvîsi⁄
;

80 
fs¸y±_pﬁicy_v1
 
	mv1
;

81 
fs¸y±_pﬁicy_v2
 
	mv2
;

82 } 
	mpﬁicy
;

89 
	#FSCRYPT_KEY_SPEC_TYPE_DESCRIPTOR
 1

	)

96 
	#FSCRYPT_KEY_SPEC_TYPE_IDENTIFIER
 2

	)

102 
	sfs¸y±_key_•ecifõr
 {

103 
__u32
 
	mty≥
;

104 
__u32
 
	m__ª£rved
;

106 
__u8
 
	m__ª£rved
[32];

107 
__u8
 
	mdes¸ùt‹
[
FSCRYPT_KEY_DESCRIPTOR_SIZE
];

108 
__u8
 
	midítifõr
[
FSCRYPT_KEY_IDENTIFIER_SIZE
];

109 } 
	mu
;

116 
	sfs¸y±_¥ovisi⁄ög_key_∑ylﬂd
 {

117 
__u32
 
	mty≥
;

118 
__u32
 
	m__ª£rved
;

119 
__u8
 
	møw
[];

123 
	sfs¸y±_add_key_¨g
 {

124 
fs¸y±_key_•ecifõr
 
	mkey_•ec
;

125 
__u32
 
	møw_size
;

126 
__u32
 
	mkey_id
;

127 
__u32
 
	m__ª£rved
[8];

128 
__u8
 
	møw
[];

132 
	sfs¸y±_ªmove_key_¨g
 {

133 
fs¸y±_key_•ecifõr
 
	mkey_•ec
;

134 
	#FSCRYPT_KEY_REMOVAL_STATUS_FLAG_FILES_BUSY
 0x00000001

	)

135 
	#FSCRYPT_KEY_REMOVAL_STATUS_FLAG_OTHER_USERS
 0x00000002

	)

136 
__u32
 
	mªmovÆ_°©us_Êags
;

137 
__u32
 
	m__ª£rved
[5];

141 
	sfs¸y±_gë_key_°©us_¨g
 {

143 
fs¸y±_key_•ecifõr
 
	mkey_•ec
;

144 
__u32
 
	m__ª£rved
[6];

147 
	#FSCRYPT_KEY_STATUS_ABSENT
 1

	)

148 
	#FSCRYPT_KEY_STATUS_PRESENT
 2

	)

149 
	#FSCRYPT_KEY_STATUS_INCOMPLETELY_REMOVED
 3

	)

150 
__u32
 
	m°©us
;

151 
	#FSCRYPT_KEY_STATUS_FLAG_ADDED_BY_SELF
 0x00000001

	)

152 
__u32
 
	m°©us_Êags
;

153 
__u32
 
	mu£r_cou¡
;

154 
__u32
 
	m__out_ª£rved
[13];

157 
	#FS_IOC_SET_ENCRYPTION_POLICY
 
	`_IOR
('f', 19, 
fs¸y±_pﬁicy_v1
)

	)

158 
	#FS_IOC_GET_ENCRYPTION_PWSALT
 
	`_IOW
('f', 20, 
__u8
[16])

	)

159 
	#FS_IOC_GET_ENCRYPTION_POLICY
 
	`_IOW
('f', 21, 
fs¸y±_pﬁicy_v1
)

	)

160 
	#FS_IOC_GET_ENCRYPTION_POLICY_EX
 
	`_IOWR
('f', 22, 
__u8
[9]Ë

	)

161 
	#FS_IOC_ADD_ENCRYPTION_KEY
 
	`_IOWR
('f', 23, 
fs¸y±_add_key_¨g
)

	)

162 
	#FS_IOC_REMOVE_ENCRYPTION_KEY
 
	`_IOWR
('f', 24, 
fs¸y±_ªmove_key_¨g
)

	)

163 
	#FS_IOC_REMOVE_ENCRYPTION_KEY_ALL_USERS
 
	`_IOWR
('f', 25, 
fs¸y±_ªmove_key_¨g
)

	)

164 
	#FS_IOC_GET_ENCRYPTION_KEY_STATUS
 
	`_IOWR
('f', 26, 
fs¸y±_gë_key_°©us_¨g
)

	)

165 
	#FS_IOC_GET_ENCRYPTION_NONCE
 
	`_IOR
('f', 27, 
__u8
[16])

	)

170 
	#fs¸y±_pﬁicy
 
fs¸y±_pﬁicy_v1


	)

171 
	#FS_KEY_DESCRIPTOR_SIZE
 
FSCRYPT_KEY_DESCRIPTOR_SIZE


	)

172 
	#FS_POLICY_FLAGS_PAD_4
 
FSCRYPT_POLICY_FLAGS_PAD_4


	)

173 
	#FS_POLICY_FLAGS_PAD_8
 
FSCRYPT_POLICY_FLAGS_PAD_8


	)

174 
	#FS_POLICY_FLAGS_PAD_16
 
FSCRYPT_POLICY_FLAGS_PAD_16


	)

175 
	#FS_POLICY_FLAGS_PAD_32
 
FSCRYPT_POLICY_FLAGS_PAD_32


	)

176 
	#FS_POLICY_FLAGS_PAD_MASK
 
FSCRYPT_POLICY_FLAGS_PAD_MASK


	)

177 
	#FS_POLICY_FLAG_DIRECT_KEY
 
FSCRYPT_POLICY_FLAG_DIRECT_KEY


	)

178 
	#FS_POLICY_FLAGS_VALID
 0x07

	)

179 
	#FS_ENCRYPTION_MODE_INVALID
 0

	)

180 
	#FS_ENCRYPTION_MODE_AES_256_XTS
 
FSCRYPT_MODE_AES_256_XTS


	)

181 
	#FS_ENCRYPTION_MODE_AES_256_GCM
 2

	)

182 
	#FS_ENCRYPTION_MODE_AES_256_CBC
 3

	)

183 
	#FS_ENCRYPTION_MODE_AES_256_CTS
 
FSCRYPT_MODE_AES_256_CTS


	)

184 
	#FS_ENCRYPTION_MODE_AES_128_CBC
 
FSCRYPT_MODE_AES_128_CBC


	)

185 
	#FS_ENCRYPTION_MODE_AES_128_CTS
 
FSCRYPT_MODE_AES_128_CTS


	)

186 
	#FS_ENCRYPTION_MODE_SPECK128_256_XTS
 7

	)

187 
	#FS_ENCRYPTION_MODE_SPECK128_256_CTS
 8

	)

188 
	#FS_ENCRYPTION_MODE_ADIANTUM
 
FSCRYPT_MODE_ADIANTUM


	)

189 
	#FS_KEY_DESC_PREFIX
 
FSCRYPT_KEY_DESC_PREFIX


	)

190 
	#FS_KEY_DESC_PREFIX_SIZE
 
FSCRYPT_KEY_DESC_PREFIX_SIZE


	)

191 
	#FS_MAX_KEY_SIZE
 
FSCRYPT_MAX_KEY_SIZE


	)

	@/usr/include/linux/ioctl.h

2 #i‚de‡
_LINUX_IOCTL_H


3 
	#_LINUX_IOCTL_H


	)

5 
	~<asm/io˘l.h
>

	@/usr/include/linux/limits.h

2 #i‚de‡
_LINUX_LIMITS_H


3 
	#_LINUX_LIMITS_H


	)

5 
	#NR_OPEN
 1024

	)

7 
	#NGROUPS_MAX
 65536

	)

8 
	#ARG_MAX
 131072

	)

9 
	#LINK_MAX
 127

	)

10 
	#MAX_CANON
 255

	)

11 
	#MAX_INPUT
 255

	)

12 
	#NAME_MAX
 255

	)

13 
	#PATH_MAX
 4096

	)

14 
	#PIPE_BUF
 4096

	)

15 
	#XATTR_NAME_MAX
 255

	)

16 
	#XATTR_SIZE_MAX
 65536

	)

17 
	#XATTR_LIST_MAX
 65536

	)

19 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/mount.h

1 #i‚de‡
_LINUX_MOUNT_H


2 
	#_LINUX_MOUNT_H


	)

4 
	~<löux/ty≥s.h
>

13 
	#MS_RDONLY
 1

	)

14 
	#MS_NOSUID
 2

	)

15 
	#MS_NODEV
 4

	)

16 
	#MS_NOEXEC
 8

	)

17 
	#MS_SYNCHRONOUS
 16

	)

18 
	#MS_REMOUNT
 32

	)

19 
	#MS_MANDLOCK
 64

	)

20 
	#MS_DIRSYNC
 128

	)

21 
	#MS_NOSYMFOLLOW
 256

	)

22 
	#MS_NOATIME
 1024

	)

23 
	#MS_NODIRATIME
 2048

	)

24 
	#MS_BIND
 4096

	)

25 
	#MS_MOVE
 8192

	)

26 
	#MS_REC
 16384

	)

27 
	#MS_VERBOSE
 32768

	)

29 
	#MS_SILENT
 32768

	)

30 
	#MS_POSIXACL
 (1<<16Ë

	)

31 
	#MS_UNBINDABLE
 (1<<17Ë

	)

32 
	#MS_PRIVATE
 (1<<18Ë

	)

33 
	#MS_SLAVE
 (1<<19Ë

	)

34 
	#MS_SHARED
 (1<<20Ë

	)

35 
	#MS_RELATIME
 (1<<21Ë

	)

36 
	#MS_KERNMOUNT
 (1<<22Ë

	)

37 
	#MS_I_VERSION
 (1<<23Ë

	)

38 
	#MS_STRICTATIME
 (1<<24Ë

	)

39 
	#MS_LAZYTIME
 (1<<25Ë

	)

42 
	#MS_SUBMOUNT
 (1<<26)

	)

43 
	#MS_NOREMOTELOCK
 (1<<27)

	)

44 
	#MS_NOSEC
 (1<<28)

	)

45 
	#MS_BORN
 (1<<29)

	)

46 
	#MS_ACTIVE
 (1<<30)

	)

47 
	#MS_NOUSER
 (1<<31)

	)

52 
	#MS_RMT_MASK
 (
MS_RDONLY
|
MS_SYNCHRONOUS
|
MS_MANDLOCK
|
MS_I_VERSION
|\

53 
MS_LAZYTIME
)

	)

58 
	#MS_MGC_VAL
 0xC0ED0000

	)

59 
	#MS_MGC_MSK
 0xffff0000

	)

64 
	#OPEN_TREE_CLONE
 1

	)

65 
	#OPEN_TREE_CLOEXEC
 
O_CLOEXEC


	)

70 
	#MOVE_MOUNT_F_SYMLINKS
 0x00000001

	)

71 
	#MOVE_MOUNT_F_AUTOMOUNTS
 0x00000002

	)

72 
	#MOVE_MOUNT_F_EMPTY_PATH
 0x00000004

	)

73 
	#MOVE_MOUNT_T_SYMLINKS
 0x00000010

	)

74 
	#MOVE_MOUNT_T_AUTOMOUNTS
 0x00000020

	)

75 
	#MOVE_MOUNT_T_EMPTY_PATH
 0x00000040

	)

76 
	#MOVE_MOUNT_SET_GROUP
 0x00000100

	)

77 
	#MOVE_MOUNT__MASK
 0x00000177

	)

82 
	#FSOPEN_CLOEXEC
 0x00000001

	)

87 
	#FSPICK_CLOEXEC
 0x00000001

	)

88 
	#FSPICK_SYMLINK_NOFOLLOW
 0x00000002

	)

89 
	#FSPICK_NO_AUTOMOUNT
 0x00000004

	)

90 
	#FSPICK_EMPTY_PATH
 0x00000008

	)

95 
	efsc⁄fig_comm™d
 {

96 
	mFSCONFIG_SET_FLAG
 = 0,

97 
	mFSCONFIG_SET_STRING
 = 1,

98 
	mFSCONFIG_SET_BINARY
 = 2,

99 
	mFSCONFIG_SET_PATH
 = 3,

100 
	mFSCONFIG_SET_PATH_EMPTY
 = 4,

101 
	mFSCONFIG_SET_FD
 = 5,

102 
	mFSCONFIG_CMD_CREATE
 = 6,

103 
	mFSCONFIG_CMD_RECONFIGURE
 = 7,

109 
	#FSMOUNT_CLOEXEC
 0x00000001

	)

114 
	#MOUNT_ATTR_RDONLY
 0x00000001

	)

115 
	#MOUNT_ATTR_NOSUID
 0x00000002

	)

116 
	#MOUNT_ATTR_NODEV
 0x00000004

	)

117 
	#MOUNT_ATTR_NOEXEC
 0x00000008

	)

118 
	#MOUNT_ATTR__ATIME
 0x00000070

	)

119 
	#MOUNT_ATTR_RELATIME
 0x00000000

	)

120 
	#MOUNT_ATTR_NOATIME
 0x00000010

	)

121 
	#MOUNT_ATTR_STRICTATIME
 0x00000020

	)

122 
	#MOUNT_ATTR_NODIRATIME
 0x00000080

	)

123 
	#MOUNT_ATTR_IDMAP
 0x00100000

	)

124 
	#MOUNT_ATTR_NOSYMFOLLOW
 0x00200000

	)

129 
	smou¡_©å
 {

130 
__u64
 
	m©å_£t
;

131 
__u64
 
	m©å_˛r
;

132 
__u64
 
	m¥›ag©i⁄
;

133 
__u64
 
	mu£∫s_fd
;

137 
	#MOUNT_ATTR_SIZE_VER0
 32

	)

	@/usr/include/linux/sysinfo.h

2 #i‚de‡
_LINUX_SYSINFO_H


3 
	#_LINUX_SYSINFO_H


	)

5 
	~<löux/ty≥s.h
>

7 
	#SI_LOAD_SHIFT
 16

	)

8 
	ssysöfo
 {

9 
__kî√l_l⁄g_t
 
	mu±ime
;

10 
__kî√l_ul⁄g_t
 
	mlﬂds
[3];

11 
__kî√l_ul⁄g_t
 
	mtŸÆøm
;

12 
__kî√l_ul⁄g_t
 
	m‰ìøm
;

13 
__kî√l_ul⁄g_t
 
	msh¨edøm
;

14 
__kî√l_ul⁄g_t
 
	mbuf„ºam
;

15 
__kî√l_ul⁄g_t
 
	mtŸÆsw≠
;

16 
__kî√l_ul⁄g_t
 
	m‰ìsw≠
;

17 
__u16
 
	m¥ocs
;

18 
__u16
 
	m∑d
;

19 
__kî√l_ul⁄g_t
 
	mtŸÆhigh
;

20 
__kî√l_ul⁄g_t
 
	m‰ìhigh
;

21 
__u32
 
	mmem_unô
;

22 
	m_f
[20-2*(
__kî√l_ul⁄g_t
)-(
__u32
)];

	@/usr/include/linux/types.h

2 #i‚de‡
_LINUX_TYPES_H


3 
	#_LINUX_TYPES_H


	)

5 
	~<asm/ty≥s.h
>

7 #i‚de‡
__ASSEMBLY__


9 
	~<löux/posix_ty≥s.h
>

17 #ifde‡
__CHECKER__


18 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

20 
	#__bôwi£__


	)

22 
	#__bôwi£
 
__bôwi£__


	)

24 
__u16
 
	t__bôwi£
 
	t__À16
;

25 
__u16
 
	t__bôwi£
 
	t__be16
;

26 
__u32
 
	t__bôwi£
 
	t__À32
;

27 
__u32
 
	t__bôwi£
 
	t__be32
;

28 
__u64
 
	t__bôwi£
 
	t__À64
;

29 
__u64
 
	t__bôwi£
 
	t__be64
;

31 
__u16
 
	t__bôwi£
 
	t__sum16
;

32 
__u32
 
	t__bôwi£
 
	t__wsum
;

43 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

44 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

45 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	t__bôwi£
 
	t__pﬁl_t
;

	@/usr/include/linux/posix_types.h

2 #i‚de‡
_LINUX_POSIX_TYPES_H


3 
	#_LINUX_POSIX_TYPES_H


	)

5 
	~<löux/°ddef.h
>

22 #unde‡
__FD_SETSIZE


23 
	#__FD_SETSIZE
 1024

	)

26 
	mfds_bôs
[
__FD_SETSIZE
 / (8 * ())];

27 } 
	t__kî√l_fd_£t
;

30 (*
	t__kî√l_sigh™dÀr_t
)();

33 
	t__kî√l_key_t
;

34 
	t__kî√l_mqd_t
;

36 
	~<asm/posix_ty≥s.h
>

	@/usr/include/linux/stddef.h

2 #i‚de‡
_LINUX_STDDEF_H


3 
	#_LINUX_STDDEF_H


	)

7 #i‚de‡
__Æways_ölöe


8 
	#__Æways_ölöe
 
__ölöe__


	)

26 
	#__°ru˘_group
(
TAG
, 
NAME
, 
ATTRS
, 
MEMBERS
...) \

28 °ru˘ { 
MEMBERS
 } 
ATTRS
; \

29 
	sTAG
 { 
MEMBERS
 } 
ATTRS
 
NAME
; \

30 }

	)

42 
	#__DECLARE_FLEX_ARRAY
(
TYPE
, 
NAME
) \

44 °ru˘ { } 
__em±y_
 ## 
NAME
; \

45 
TYPE
 
NAME
[]; \

46 }

	)

	@
1
.
1
/usr/include
16
381
Makefile
driver.c
my_driver.c
my_driver.mod.c
/usr/include/linux/fs.h
/usr/include/linux/kernel.h
/usr/include/linux/module.h
/usr/include/linux/const.h
/usr/include/linux/fscrypt.h
/usr/include/linux/ioctl.h
/usr/include/linux/limits.h
/usr/include/linux/mount.h
/usr/include/linux/sysinfo.h
/usr/include/linux/types.h
/usr/include/linux/posix_types.h
/usr/include/linux/stddef.h
